import os, sys, datetime, hashlib


targetFile = ""
arg1 = " "
arg2 = " "
if(len(sys.argv) > 1):
    targetFile = sys.argv[len(sys.argv) - 1]
    if(len(sys.argv) > 2):
        arg1 = sys.argv[2]
        if(len(sys.argv) > 3):
            arg2 = sys.argv[3]
else:
    targetFile = raw_input("Enter the location of the target file: ")
fileName, fileExtension = os.path.splitext(targetFile)
logFile = "SD-"+fileName+".log"


def main():
    print("Updating ClamAV signatures")
    os.system("sudo freshclam")

    print("\nResults will be saved in "+logFile)
    
    currTime = str(datetime.datetime.now())
    os.system("echo \""+currTime+"\n\" | tee -a "+logFile)

    #unzip
    if((arg1 == "-z") or (arg2 == "-z")):
        print("File will temporarily exist on THIS system as temp"+fileName+".temp")
        cont = raw_input("")
        if('y' in cont):
            os.system("unzip -P infected "+targetFile)
        else:
            sys.exit()

    #hash
    md5Hash = hashlib.md5(targetFile).hexdigest()
    os.system("echo \"MD5: "+md5Hash+"\n\" | tee -a "+logFile)

    #file
    execDispTarget("file")

    #strings - look for: IPs, urls, file names, ...
    stringLog = "strings-"+fileName+".log"
    os.system("echo \"strings:\nAll strings available in "+stringLog+"\" | tee -a "+logFile)
    os.system("strings "+targetFile+" >> "+stringLog)
    stringsFile = open(stringLog, 'r')
    for line in stringsFile:
        line = line.rstrip()
        if(analyzeString(line) == 1):
            os.system("echo \""+line+"\" | tee -a "+logFile)
    stringsFile.close()
    os.system("echo \"\n\" | tee -a "+logFile)

    #hashes - clamAV and VT
    execDispTarget("clamscan --allmatch --detect-pua=yes --phishing-sigs=yes --phishing-scan-urls=yes --alert-macros=yes")
    #VT API

    #binwalk - make optional suggestion
    executable = 'n'
    if((arg1 == "-e") or (arg2 == "-e")):
        executable = 'y'
    else:
        executable = raw_input("Could there be embedded executable code? (y/n): ")
    if('y' in executable):
        execDispTarget("binwalk")

    #remove unzipped

def execDispTarget(cmdStr):
    os.system("echo \""+cmdStr+":\" | tee -a "+logFile+"; "+cmdStr+' '+targetFile+" | tee -a "+logFile+"; echo \"\n\" | tee -a "+logFile)


def analyzeString(string):
    if("http" in string):
        return 1
    #to be coded



main()
